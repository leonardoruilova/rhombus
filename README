Sistema Operativo Rhombus Operating version 0.8 (Alfa)

-- Ante cualquier duda, por favor revise nuestra Wiki y nuestras Preguntas de Usuario Frecuentes (FAQ) --

Introduccion
*****************************************************************************

Definicion de Rhombus

Rhombus es un Sistema Operativo con propositos recreativos (del ingles hobby operating system).
Rhombus ha sido disenado y programado en su mayor parte por Nick Johnson, desde finales del 2008. 
Rhombus esta conformado por un microkernel, una biblioteca C, una linea de comandos, utilidades simples y diversos controladores. 
Ud. podria ejecutar Rhombus  en hardware estandar de Pc con un CPU Pentium o superior. 
Rhombus se ejecuta en modo protegido de 32 bit.

El Sistema Operativo Rhombus tiene familiaridad con UNIX en muchos aspectos. 
En nuestro Sistema Operativo utilizamos un estandar propio, sin compatibilidad POSIX. 
Consideramos posible implementar dicha compatibilidad POSIX en el futuro. 

Nuestro Sistema Operativo posee mecanismo de VFS particularmente distinto, que  
permite a los procesos actuar no solo como archivos, sino como un Sistema de Archivos montado y completo. 

En Rhombus tambien existe como fundamento una orientacion a eventos y multiproceso en hebras. 
Dichas cualidades son de utilidad para la programacion de controladores, asi como 
para la futura escalabilidad en multiples procesadores. 

En Rhombus ud. podra ver una suerte de caja de arena para mi creatividad, por lo que 
sera posible que aprecie diversas otras tecnologias en mi codigo fuente.

Acerca del uso del Sistema Operativo Rhombus

El Sistema Operativo Rhombus carece de la estabilidad necesaria para el uso cotidiano, si bien estamos avances en ese aspecto.

Ud. puede programar en Rhombus con el lenguaje Lua, con nuestro interprete escrito en C.
Ud. puede compilar bajo CLang nuestro interprete, con todas las warning flags and all optimization flags correspondientes. 

Lanzaremos la primera version beta de Rhombus en un futuro cercano.

Liberamos bajo un derecho de autor similar a OpenBSD todo el codigo del Rhombus core, compuesto por el nucleo, las bibliotecas libc y libdriver, asi como los 
controladores basicos.
Esto implica que ud. puede modificar y redistribuir el codigo fuente de Rhombus con libertad, 
siempre que mantenga la licencia original y la informacion de la autoria en cada uno de los archivos de su version. 

El OpenBSD license statement es una licencia de codigo abierto certificada, 
sin embargo ud. el codigo fuente de Rhombus en projectos de software privativo si asi lo desea.

Acerca de las metas del Sistema Operativo Rhombus

Rhombus, tal como el UNIX original, lucha por empoderar al programador mediante conexiones 
con las cuales el programador puede combnar componentes simples de esta tecnologia. 
 
Con el Sistema Operativo UNIX llego la tecnologia de las tuberias de texto y los archivos de 
dispositivos. En Rhombus, nosotros extendemos esta metafora con direccionamiento uniforme de recursos
(uniform resource addressing), un sistema de interaccion mediante comandos de proposito general
para daemons de sistema asi como para servicios, para tuberias graficos y tuberias de eventos y 
pseudo sistemas de archivos que pueden ser mostrados por cualquier proceso de usuario.

In addition, Rhombus strives to allow easy modification, when existing stacks
and protocols prove insufficient. Rhombus is built to be rebuilt, to be taken 
apart and understood, and to be a foundation for new ideas. Every core piece 
of Rhombus is intended to be simple enough for a single person to completely 
understand, and if necessary, to for a single person to rewrite.
Documentation (at release at least) will be comprehensive from the largest 
library down to the smallest function, to aid those who wish to hack.

Build Instructions
*****************************************************************************

This system is meant to be built with x86 or x86_64 Linux as a host: it may 
build and test on other Linux platforms, and will probably build on any 
UNIX-like system.

To reliably build the system, you should use a cross-compiler. Instructions
for how to install a cross-compiler for Rhombus are found here:
https://github.com/nickbjohnson4224/rhombus/wiki/Environment-setup

To build the system, type "make". To create a CD image from the built system,
type "make image" -- the image will be created at rhombus/run/rhombus.iso. 
To build and then test the system using QEMU, type "make test". To remove 
all object files, type "make clean".

Licencia de la traduccion al castellano
*****************************************************************************

Esta traduccion fue hecha por Virgilio Leonardo Ruilova, ha sido liberada a los Comunes bajo la licencia CC-BY-NC-SA
