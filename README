Sistema Operativo Rhombus Operating version 0.8 (Alfa)

-- Ante cualquier duda, por favor revise nuestra Wiki y nuestras Preguntas de Usuario Frecuentes (FAQ) --

Introduccion
*****************************************************************************

Definicion de Rhombus

Rhombus es un Sistema Operativo con propositos recreativos (del ingles hobby operating system).
Rhombus  ha sido disenado y programado en su mayor parte por Nick Johnson, desde finales del 2008. 
Rhombus esta conformado por un microkernel, una biblioteca C, una linea de comandos, utilidades simples y diversos controladores. 
Ud. podria ejecutar Rhombus  en hardware estandar de Pc con un CPU Pentium o superior. 
Rhombus se ejecuta en modo protegido de 32 bit.

El Sistema Operativo Rhombus tiene familiaridad con UNIX en muchos aspectos. 
En nuestro Sistema Operativo utilizamos un estandar propio, sin compatibilidad POSIX. 
Consideramos posible implementar dicha compatibilidad POSIX en el futuro. 

Nuestro Sistema Operativo posee mecanismo de VFS particularmente distinto, que  
permite a los procesos actuar no solo como archivos, sino como un Sistema de Archivos montado y completo. 

En Rhombus tambien existe como fundamento una orientacion a eventos y multiproceso en hebras. 
Dichas cualidades son de utilidad para la programacion de controladores, asi como 
para la futura escalabilidad en multiples procesadores. 

En Rhombus ud. podra ver una suerte de caja de arena para mi creatividad, por lo que 
sera posible que aprecie diversas otras tecnologias en mi codigo fuente.

Acerca del uso del Sistema Operativo Rhombus

At the moment, Rhombus is not stable enough for real use, but it is rapidly
progressing toward that point. It already can run a Lua interpreter, which
is written in standard C, and all of its source code can be compiled with
all warning flags and all optimization flags for CLang. The first beta
release of Rhombus will likely occur soon.

All code in the Rhombus core (kernel, libc, libdriver, basic drivers) as well 
as most of the rest of the system uses an OpenBSD-like copyright statement.
In essence, this means you can freely modify and redistribute Rhombus as long
as you keep the license and copyright information on each of the files that
contains it. The OpenBSD license statement is a certified open source license, 
but you may incorporate Rhombus code into closed source projects if you wish.

What are the goals of Rhombus?

Rhombus, much like the original UNIX, strives to give the programmer powerful, 
general connections with which to combine system components. With UNIX came 
text pipelines and device files; Rhombus extends this with uniform resource
addressing, a general purpose command system for system daemons and services,
graphics and event pipelines, and pseudo-filesystems that can be presented by
any user process.

In addition, Rhombus strives to allow easy modification, when existing stacks
and protocols prove insufficient. Rhombus is built to be rebuilt, to be taken 
apart and understood, and to be a foundation for new ideas. Every core piece 
of Rhombus is intended to be simple enough for a single person to completely 
understand, and if necessary, to for a single person to rewrite.
Documentation (at release at least) will be comprehensive from the largest 
library down to the smallest function, to aid those who wish to hack.

Build Instructions
*****************************************************************************

This system is meant to be built with x86 or x86_64 Linux as a host: it may 
build and test on other Linux platforms, and will probably build on any 
UNIX-like system.

To reliably build the system, you should use a cross-compiler. Instructions
for how to install a cross-compiler for Rhombus are found here:
https://github.com/nickbjohnson4224/rhombus/wiki/Environment-setup

To build the system, type "make". To create a CD image from the built system,
type "make image" -- the image will be created at rhombus/run/rhombus.iso. 
To build and then test the system using QEMU, type "make test". To remove 
all object files, type "make clean".

Licencia de la traduccion al castellano
*****************************************************************************

Esta traduccion fue hecha por Virgilio Leonardo Ruilova, ha sido liberada a los Comunes bajo la licencia CC-BY-NC-SA
